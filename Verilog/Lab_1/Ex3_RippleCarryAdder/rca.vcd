$date
	Wed Mar  5 16:13:01 2025
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module tb_ripple_carry_adder $end
$var wire 4 ! Sum [3:0] $end
$var wire 1 " Cout $end
$var reg 4 # A [3:0] $end
$var reg 4 $ B [3:0] $end
$var reg 1 % Cin $end
$scope module dut $end
$var wire 4 & A [3:0] $end
$var wire 4 ' B [3:0] $end
$var wire 1 % Cin $end
$var wire 4 ( Sum [3:0] $end
$var wire 1 " Cout $end
$var wire 1 ) C3 $end
$var wire 1 * C2 $end
$var wire 1 + C1 $end
$scope module fa0 $end
$var wire 1 , a $end
$var wire 1 - b $end
$var wire 1 % cin $end
$var wire 1 + cout $end
$var wire 1 . sum $end
$upscope $end
$scope module fa1 $end
$var wire 1 / a $end
$var wire 1 0 b $end
$var wire 1 + cin $end
$var wire 1 * cout $end
$var wire 1 1 sum $end
$upscope $end
$scope module fa2 $end
$var wire 1 2 a $end
$var wire 1 3 b $end
$var wire 1 * cin $end
$var wire 1 ) cout $end
$var wire 1 4 sum $end
$upscope $end
$scope module fa3 $end
$var wire 1 5 a $end
$var wire 1 6 b $end
$var wire 1 ) cin $end
$var wire 1 " cout $end
$var wire 1 7 sum $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
$end
#0
$dumpvars
07
06
05
04
03
02
01
00
0/
0.
0-
0,
0+
0*
0)
b0 (
b0 '
b0 &
0%
b0 $
b0 #
0"
b0 !
$end
#10
11
b11 !
b11 (
1.
10
1,
b10 $
b10 '
b1 #
b1 &
#20
b111 !
b111 (
14
12
b101 #
b101 &
#30
17
1+
1)
1*
1"
0.
14
b1110 !
b1110 (
11
1-
13
16
1/
15
b1111 $
b1111 '
b1111 #
b1111 &
#40
04
0*
0"
0+
0)
11
17
b1011 !
b1011 (
1.
00
03
06
0,
02
b1 $
b1 '
b1010 #
b1010 &
#50
